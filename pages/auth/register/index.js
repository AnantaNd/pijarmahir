/* eslint-disable react-hooks/rules-of-hooks */
import { yupResolver } from "@hookform/resolvers/yup";
import { signIn } from 'next-auth/react';
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { useForm } from 'react-hook-form';
import { FaFacebook } from "react-icons/fa";
import { FcGoogle } from "react-icons/fc";
import * as yup from 'yup';
import Button from "../../../components/Button/Button";
import FooterSecond from '../../../components/Footer/FooterSecond/FooterSecond';
import Input from "../../../components/Input/Input";
import styles from "./Register.module.css";

const schema = yup.object({
  email: yup
    .string()
    .required("Masukan data terlebih dahulu")
    .matches("@", "Format email yang dimasukkan tidak memiliki “@”")
    .email("Format email tidak valid"),
  password: yup
    .string()
    .required("Masukan password terlebih dahulu")
    .min(4, 'Password minimal 4 karakter'),
  confirm_password: yup
    .string()
    .required('Masukan kembali password')
    .oneOf([yup.ref('password')], 'Password harus sama'),
  username: yup
    .string()
    .required('Masukan username')
})



export default function index() {
  const [email, setEmail] = useState()
  const [username, setUsername] = useState()
  const [pass, setPass] = useState()
  const [confirmPass, setConfirmPass] = useState()
  const { register, handleSubmit, formState: { errors } }
    = useForm({
      resolver: yupResolver(schema)
    })


  // console.log(users)
  function handleInputEmail(e) {
    setEmail(e.target.value);
    // console.log(e.target.value)
  }
  function handleInputUsername(e) {
    setUsername(e.target.value);
    // console.log(e.target.value)
  }

  const handleInputPass = (e) => {
    setPass(e.target.value)
  }

  const handleInputConfirm = (e) => {
    setConfirmPass(e.target.value)
  }

  const handleLoginFacebook = (e) => {
    e.preventDefault();
    signIn('facebook', {
      callbackUrl: '/'
    });
  }
  
  const handleLoginGoogle = (e) => {
    e.preventDefault();
    signIn('google', {
      callbackUrl: '/'
    });
  }

  const onSubmit = (data) => {
    console.log(data)
    console.log("pass",data.password)
    // metode post
    fetch('http://localhost:9000/api/v1/user/', {
      method: 'POST',
      mode:'cors',
      headers:{'Content-Type': 'application/json'},
      body: JSON.stringify({
        username: data.username,
        email: data.email,
        password: data.password,
      })
    })
    // axios.post('http://localhost:9000/api/v1/user/',{
    //   username: data.username,
    //   email : data.email,
    //   password : data.password
    // })
  }

  return (
    <>
      <Head>
        <title>Pijar | Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pijar_logo.svg" />
      </Head>
      <main className={styles.container}>
        <Link href="/">
          <Image className={styles.logo} src="/pijar_logo.svg" height={80} width={80} style={{ marginLeft: "auto", marginRight: "auto" }} alt='logo' />
        </Link>
        <div className={styles.content}>
          <Image className={styles.ilustration} src="/new-profile.svg" height={480} width={480} style={{ marginRight: "90px" }} alt='ilustration' />
          <form method="post" className={styles.content} onSubmit={handleSubmit(onSubmit)}>
            <div className={styles.container_card}>
              <h2 className={styles.text_login}>Daftar</h2>
              <p className={styles.suggestion}>Lanjutkan pembelajaranmu dengan Pijar Mahir</p>
              {/* input */}
              <Input
                label={'Username'}
                name={'username'}
                type={"text"}
                placeholder={'username'}
                onChangeInput={handleInputUsername}
                helper={errors.username?.message}
                register={{ ...register('username') }} />
              <Input
                label={'Email'}
                name={'email'}
                type={"text"}
                placeholder={'example@gmail.com'}
                onChangeInput={handleInputEmail}
                helper={errors.email?.message}
                register={{ ...register('email') }} />
              <Input
                label={'Password'}
                name={'password'}
                type={"password"}
                placeholder={'password'}
                onChangeInput={handleInputPass}
                helper={errors.password?.message}
                register={{ ...register('password') }} />
              <Input
                label={'Konfirmasi Password'}
                name={'password'}
                type={"password"}
                placeholder={'password'}
                onChangeInput={handleInputConfirm}
                helper={errors.confirm_password?.message}
                register={{ ...register('confirm_password') }} />
              {/* input */}
              <div className={styles.sparator}>
                <Button buttonType="primary" >
                  Daftar
                </Button>
              </div>
              <div className={styles.sparator}>
                <div className={styles.hl}></div>
                atau
                <div className={styles.hl}></div>
              </div>
              <div className={styles.third_party}>
                <Button btnOnClick={handleLoginGoogle}>
                  <FcGoogle size={24} style={{ marginRight: "8px" }} />Masuk dengan Google
                </Button>
                <Button btnOnClick={handleLoginFacebook}>
                  <FaFacebook color="DodgerBlue" size={24} style={{ marginRight: "8px" }} />Masuk dengan Facebook
                </Button>
              </div>
              <div className={styles.register_link}>
                sudah memiliki akun? <Link href="/auth/login" style={{ textDecoration: "none" }}><span className={styles.orange_text}>Masuk</span></Link>
              </div>
            </div>
          </form>
        </div>
      </main>
      <FooterSecond />
    </>
  )
}
// export async function getStaticProps() {
//   try {
//     const res = await fetch('http://localhost:9000/api/v1/user/');
//     const users = await res.json();
//     return {
//       props: { users }
//     }
//   } catch (err) {
//     console.error(err)
//   }
//   return {
//     props: { users: [] }
//   }
// }