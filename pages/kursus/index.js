/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react-hooks/rules-of-hooks */
import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import Layouts from "../../components/Layouts/Layouts";
import ListCourse from "../../components/ListCourse/ListCourse";
import Sort from "../../components/Sort/Sort";
import SwiperSlides from "../../components/SwiperSlides/SwiperSlides";
import styles from "./Kursus.module.css";



export default function index({course}){

  const [itemData, setItemData] = useState(course.data)
  // const [isChecked, setIsChecked] = useState('')
  const [select, setSelect] = useState('')
  const [dataFound, setDataFound] = useState('')

  console.log([...itemData])
  // const handleChecked =(e)=>{
  //   setIsChecked(e.target.value)
  //   console.log(e.target.value)
  // }
  const hanldeSelect=(e)=>{
    setSelect(e.target.value)
    // console.log(e.target.value); 
  }
  const handleSearch=(e)=>{
    setDataFound(e.target.value)
    console.log(dataFound)
  }
  // useEffect(()=>{
    
  //   if(isChecked === 'Kartu Prakerja'){
  //     const filter = [...itemData].filter((data)=> data.category_name == 'Kartu Prakerja')
  //     // console.log(filter)
  //     setItemData(filter)
  //   }else if(isChecked === 'Mahir Digital'){
  //     const filter = [...itemData].filter((data)=> data.category_name == 'Mahir Digital')
  //     // console.log(filter)
  //     setItemData(filter)
  //   }else if(isChecked === 'Mahir Teknologi'){
  //     const filter = [...itemData].filter((data)=> data.category_name == 'Mahir Teknologi')
  //     // console.log(filter)
  //     setItemData(filter)
  //   }
  // }, [isChecked])

  useEffect(()=>{
    if(dataFound){
      const searchLowerCasse = dataFound.toLowerCase()
      const found = itemData
        .filter((data)=> data.fullname.toLowerCase().includes(searchLowerCasse))
      setItemData(found)
    }else{
      setItemData(course.data)
    }
  }, [dataFound])

  useEffect(()=>{
    if(select === 'maxPrice'){
      // console.log('max price selected')
      const max = [...itemData].sort((a, b)=> b.price - a.price);
      setItemData(max)
    }else if(select === 'lowPrice'){
      // console.log('min price selected')
      const min = [...itemData].sort((a, b)=> a.price - b.price);
      setItemData(min)
    }else if(select === 'maxRating'){
      const maxRating = [...itemData].sort((a, b)=> b.rating - a.rating || b.totalrater - a.totalrater);
      setItemData(maxRating)
    }else if(select === 'lowRating'){
      const minRating = [...itemData].sort((a, b)=> a.rating - b.rating || a.totalrater - b.totalrater);
      setItemData(minRating)
    }else{
      setItemData(course.data)
    }
  }, [select])

  return(
    <>
    <Head>
      <title>Pijar Mahir - kursus</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/pijar_logo.svg" />
    </Head>
    {/* <div className={styles.pattern}></div> */}
    <Layouts>
      <SwiperSlides/>
      <Sort onSorting={hanldeSelect} onSearch={handleSearch}/>
      <div className={styles.container}>
        <div className={styles.filter}>
          {/* <Section> */}
            {/* <Filter onCategory={handleChecked} /> */}
          {/* </Section> */}
        </div>
        <div className={styles.content}>
          {/* <Section> */}
          <p>Menampilkan {itemData.length} dari seluruh kursus</p>
          {itemData.map((data, idx)=>{
            return(
              <Link href={`kursus/${data.id}`} key={idx}>
                <ListCourse 
                  img={'/mahirprakerja.jpg'}
                  title={data.fullname}
                  price={data.price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.')}
                  rating={data.rating}
                  ulasan={data.totalrater}
                  mitra={data.teacher}
                  />
              </Link>
            )
          })}
            {/* <ListCourse img={'/mahirprakerja.jpg'} title={'Belajar Mengelola Usaha Budi Daya Jamur untuk Calon Pengusaha Jamur'} price={10} mitra={'cariilmu'} rating={3.3} ulasan={12}/> */}
          {/* </Section> */}
        </div>
      </div>
    </Layouts>
    </>
  )
}

export async function getStaticProps(){
  try{
    const res1 = await fetch('http://localhost:9000/api/v1/course/')

    // response
    const course = await res1.json()
 
    return {
      props:{
        course
      }
    }
  }catch(err){
    console.error(err)
  }
  return{
    props: {
     course

    }
  }
}
